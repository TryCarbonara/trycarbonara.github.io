openapi: 3.0.1
info:
  title: Trycarbonara.CloudIdentify.Api
  version: Staging-1.0.0
servers:
  # Added by API Auto Mocking Plugin
  - url: https://ak938savw2.execute-api.us-west-1.amazonaws.com/dev
    description: Carbonara Cloud Identify API
paths:
  /api/cloud/identify:
    post:
      tags:
        - CloudIdentify
      summary: Calculate the energy consumption & carbon emission data by application usage for target region for a specified time stamp
      operationId: getFootprint
      requestBody:
        description: Array of `infrastructureInputData` inputs where each contains `cpuUtilization`, `memoryUsage`, `ssdStorageAvailable`, `hddStorageAvailable`, `networkInUsage` and `networkOutUsage` for a passed `timeStamp` which to calculate energy consumption (kWh)) and carbon score (tCO2e) from average average/marginal carbon intensity for specified grid info.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarbonInfrastructureInputDTO'
      parameters:
        - name: authorizationToken
          in: header
          description: Auth Token generated by getAuthToken.
          required: true
          schema:
            type: string
            example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IlN
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/CarbonInfrastructureOutputDTO'
        '204':
          description: No Content
        '400':
          description: Bad Request
        '500':
          description: Internal server error
  /api/cloud/usage:
    post:
      tags:
        - CloudIdentify
      summary: Calculate the energy consumption & carbon emission data by usage cost report
      operationId: getFootprint
      requestBody:
        description: File containing AWS CUR report. Please refer - https://docs.aws.amazon.com/cur/latest/userguide/view-cur.html
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                data:  # Key for the file is 'data'
                  type: string
                  format: binary
      parameters:
        - name: authorizationToken
          in: header
          description: Auth Token generated by getAuthToken.
          required: true
          schema:
            type: string
            example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IlN
        - name: cloudProvider
          in: query
          description: Cloud Provider.
          required: true
          schema:
            type: string
            example: aws
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/CarbonInfrastructureOutputDTO'
        '204':
          description: No Content
        '400':
          description: Bad Request
        '500':
          description: Internal server error
components:
  schemas:
    CarbonInfrastructureInputDTO:
      type: object
      properties:
        infrastructureInputData:
          type: object
          $ref: '#/components/schemas/CarbonInfrastructureInputDataDTO'
          description: "infrastructureInputData containing infrastructure usage data"
          nullable: false
      additionalProperties: false
    CarbonInfrastructureInputDataDTO:
      type: object
      properties:
        cloudProvider:
          type: string
          nullable: false
          example: aws
          required: true
          description: Supported Types - aws; coming up - azure, gcp
          enum:
            - aws
            - azure
            - gcp
        region:
          type: string
          nullable: false
          example: us-east-2
          required: true
          description: Respective Cloud Provider supported Regions
        serviceType:
          type: string
          nullable: false
          example: ec2
          required: true
          description: Respective Cloud Provider supported Service
        instanceType:
          type: string
          nullable: true
          example: t2.xlarge
          description: Respective Cloud Provider supported Node-Types
        usageType:
          type: string
          nullable: true
          example: EC2_EBS_SNAPSHOT
          description: Usage Type helps determine the exact use-case and apply appropriate replication factor, if not specified.
        vcpuAllocated:
          type: number
          description: vCPU Hours allocated/requested
          format: float
          nullable: true
          example: 0.1
        gpuAllocated:
          type: number
          description: GPU Hours allocated/requested
          format: float
          nullable: true
          example: 3
        inputFrequency:
          type: number
          description: frequency of input to be published in second(s)
          format: float
          nullable: false
          example: 300
          required: true
        pue:
          type: number
          description: power usage effectiveness coefficient. Defaults to industry (cloud-provider) standards, if not provided.
          format: float
          nullable: true
          example: 1.55
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/CarbonInfrastructureInputsInputDTO'
          description: "Usage input data-point records"
          nullable: false
          required: true
      additionalProperties: false
    CarbonInfrastructureOutputDTO:
      type: object
      properties:
        infrastructureOutputData:
          type: object
          $ref: '#/components/schemas/CarbonInfrastructureOutputDataDTO'
          description: "infrastructureOutputData containing infrastructure carbon footprint result data"
          nullable: false
      additionalProperties: false
    CarbonInfrastructureOutputDataDTO:
      type: object
      properties:
        cloudProvider:
          type: string
          example: aws
          description: Supported Types - aws, azure, gcp
        region:
          type: string
          example: us-east-2
          description: Respective Cloud Provider supported Regions
        serviceType:
          type: string
          example: ec2
          description: Respective Cloud Provider supported Service
        instanceType:
          type: string
          example: t2.xlarge
          description: Respective Cloud Provider supported Node-Types
        inputFrequency:
          type: number
          description: frequency of input to be published in second(s)
          format: float
          example: 300
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/CarbonInfrastructureInputsOutputDTO'
          description: "Usage input data-point records"
      additionalProperties: false
    CarbonInfrastructureInputsInputDTO:
      type: object
      properties:
        startTime:
          type: string
          format: date-time
          nullable: false
          example: 2022-03-10 18:00:00-08:00
          description: Timestamp in ISO Format + Offset
          required: true
        computeUtilization:
          type: number
          nullable: true
          description: Compute (CPU/GPU) Utilization in %
          format: double
          example: 30
        memoryUsage:
          type: number
          nullable: true
          description: Memory Utilization in bytes
          format: double
          example: 5000000
        ssdStorageAvailable:
          type: number
          nullable: true
          description: SSD Disk Utilization in bytes
          format: double
          example: 100000
        hddStorageAvailable:
          type: number
          nullable: true
          description: HDD Disk Utilization in bytes
          format: double
          example: 1000000
        networkInUsage:
          type: number
          nullable: true
          description: Network In in bytes
          format: double
          example: 123048878
        networkOutUsage:
          type: number
          nullable: true
          description: Network Out in bytes
          format: double
          example: 123253343
        replicationFactor:
          type: number
          nullable: true
          description: Replication factor for the usage. Defaults applied, if not provided.
          format: double
          example: 1
        tags:
          type: object
          nullable: true
          description: Tags to be associated with the data.
          example: {'id': 'abc'}
      additionalProperties: false
    CarbonInfrastructureInputsOutputDTO:
      type: object
      properties:
        startTime:
          type: string
          format: date-time
          example: 2022-03-10 18:00:00-08:00
          description: Timestamp in ISO Format + Offset
        marginalCarbonIntensity:
          type: number
          description: Grid Marginal Carbon Intensity in lbs/MWh
          format: double
          example: 1004
        averageCarbonIntensity:
          type: number
          description: Grid Avergage Carbon Intensity in lbs/MWh
          format: double
          example: 246.91
        carbonfromComputeMarginal:
          type: number
          description: Marginal Carbon Emission from Compute in tonnes CO2 eq
          format: double
          example: 6.352931570973682e-08
        carbonfromComputeAverage:
          type: number
          description: Average Carbon Emission from Compute in tonnes CO2 eq
          format: double
          example: 6.352931570973682e-08
        carbonfromNetworkInMarginal:
          type: number
          description: Carbon Emission from Network In in tonnes CO2 eq
          format: double
          example: 5.6037354969110334e-08
        carbonfromNetworkInAverage:
          type: number
          description: Carbon Emission from Network In in tonnes CO2 eq
          format: double
          example: 5.6037354969110334e-08
        carbonfromNetworkOutMarginal:
          type: number
          description: Carbon Emission from Network Out in tonnes CO2 eq
          format: double
          example: 5.613046981883499e-08
        carbonfromNetworkOutAverage:
          type: number
          description: Carbon Emission from Network Out in tonnes CO2 eq
          format: double
          example: 5.613046981883499e-08
        carbonfromMemoryMarginal:
          type: number
          description: Carbon Emission from Memory in tonnes CO2 eq
          format: double
          example: 7.438318924198577e-08
        carbonfromMemoryAverage:
          type: number
          description: Carbon Emission from Memory in tonnes CO2 eq
          format: double
          example: 7.438318924198577e-08
        carbonfromSsdStorageMarginal:
          type: number
          description: Carbon Emission from SSD Storage in tonnes CO2 eq
          format: double
          example: 2.466789439147487e-12
        carbonfromSsdStorageAverage:
          type: number
          description: Carbon Emission from SSD Storage in tonnes CO2 eq
          format: double
          example: 3.466789439147487e-12
        carbonfromHddStorageMarginal:
          type: number
          description: Carbon Emission from HDD Storage in tonnes CO2 eq
          format: double
          example: 4.466789439147487e-12
        carbonfromHddStorageAverage:
          type: number
          description: Carbon Emission from HDD Storage in tonnes CO2 eq
          format: double
          example: 5.466789439147487e-12
        carbonFromComputeEmbodied:
          type: number
          description: Total Carbon Embodied Emission based on the instance type, for allocated compute, in tonnes CO2 eq
          format: double
          example: 0.0010647816666666666
        carbonTotalMarginal:
          type: number
          description: Total Marginal Carbon Emission in tonnes CO2 eq
          format: double
          example: 2.500827965291071e-07
        carbonTotalAverage:
          type: number
          description: Total Average Carbon Emission in tonnes CO2 eq
          format: double
          example: 2.500827965291071e-07
        kwHCompute:
          type: number
          description: Energy Consumption from Compute in kWh
          format: double
          example: 0.00013949999999999998
        kwHNetworkIn:
          type: number
          description: Energy Consumption from Network In in kWh
          format: double
          example: 0.00012304887800000002
        kwHNetworkOut:
          type: number
          description: Energy Consumption from Network Out in kWh
          format: double
          example: 0.000123253343
        kwHMemory:
          type: number
          description: Energy Consumption from Memory in kWh
          format: double
          example: 0.00016333333333333334
        kwHSsdStorage:
          type: number
          description: Energy Consumption from SSD Storage in kWh
          format: double
          example: 5.416666666666666e-09
        kwHHddStorage:
          type: number
          description: Energy Consumption from HDD Storage in kWh
          format: double
          example: 5.416666666666666e-09
        tags:
          type: object
          description: Tags to be associated with the data.
          example: { 'id': 'abc' }
        usageType:
          type: string
          example: EC2_EBS_SNAPSHOT
          description: Usage Type helps determine the exact use-case and apply appropriate replication factor, if not specified.
      additionalProperties: false
    TokenDataDTO:
      type: object
      properties:
        token:
          type: string
          nullable: false
          example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IlN"
      additionalProperties: false
externalDocs:
  description: "Find out more about Carbonara"
  url: "https://trycarbonara.github.io"